{"ast":null,"code":"var _jsxFileName = \"/root/devops/tasks_4u/frontend/src/components/TaskEditModal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nconst TaskEditModal = ({\n  taskData,\n  toggle,\n  onSave\n}) => {\n  const [item, setItem] = useState(taskData);\n  useEffect(() => {\n    setItem(taskData);\n  }, [taskData]);\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    setItem({\n      ...item,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => {\n      onSave(item);\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Task Item\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"task-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"task-title\",\n    name: \"title\",\n    value: item.title,\n    onChange: handleChange,\n    placeholder: \"Enter Task Title\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"task-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"task-description\",\n    name: \"description\",\n    value: item.description,\n    onChange: handleChange,\n    placeholder: \"Enter Task description\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    name: \"completed\",\n    checked: item.completed,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), \"Completed\"))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};\nexport default TaskEditModal;","map":{"version":3,"names":["React","useEffect","useState","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","TaskEditModal","taskData","toggle","onSave","item","setItem","handleChange","e","name","value","target","type","checked","createElement","isOpen","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","for","id","title","onChange","placeholder","required","description","check","completed","color"],"sources":["/root/devops/tasks_4u/frontend/src/components/TaskEditModal.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from \"reactstrap\";\n\nconst TaskEditModal = ({ taskData, toggle, onSave }) => {\n  const [item, setItem] = useState(taskData);\n\n  useEffect(() => {\n    setItem(taskData);\n  }, [taskData]);\n\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n    if (e.target.type === \"checkbox\") {\n      value = e.target.checked;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  return (\n    <Modal isOpen={true} toggle={toggle}>\n      <Form onSubmit={(e) => { onSave(item); e.preventDefault(); }}>\n        <ModalHeader toggle={toggle}>Task Item</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"task-title\">Title</Label>\n            <Input\n              type=\"text\"\n              id=\"task-title\"\n              name=\"title\"\n              value={item.title}\n              onChange={handleChange}\n              placeholder=\"Enter Task Title\"\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"task-description\">Description</Label>\n            <Input\n              type=\"text\"\n              id=\"task-description\"\n              name=\"description\"\n              value={item.description}\n              onChange={handleChange}\n              placeholder=\"Enter Task description\"\n              required\n            />\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type=\"checkbox\"\n                name=\"completed\"\n                checked={item.completed}\n                onChange={handleChange}\n              />\n              Completed\n            </Label>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button type=\"submit\" color=\"success\">\n            Save\n          </Button>\n        </ModalFooter>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default TaskEditModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}