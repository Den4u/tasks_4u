{"map":"{\"version\":3,\"sources\":[\"/root/devops/tasks_4u/frontend/src/components/TaskEditModal.js\",\"/root/devops/tasks_4u/frontend/src/components/Task.js\",\"/root/devops/tasks_4u/frontend/src/components/TabList.js\",\"/root/devops/tasks_4u/frontend/src/App.js\",\"/root/devops/tasks_4u/frontend/src/reportWebVitals.js\",\"/root/devops/tasks_4u/frontend/src/index.js\"],\"names\":[\"TaskEditModal\",\"_ref\",\"taskData\",\"toggle\",\"onSave\",\"item\",\"setItem\",\"useState\",\"useEffect\",\"handleChange\",\"e\",\"name\",\"value\",\"target\",\"type\",\"checked\",\"[object Object]\",\"React\",\"createElement\",\"Modal\",\"isOpen\",\"Form\",\"onSubmit\",\"preventDefault\",\"ModalHeader\",\"ModalBody\",\"FormGroup\",\"Label\",\"for\",\"Input\",\"id\",\"title\",\"onChange\",\"placeholder\",\"required\",\"description\",\"check\",\"completed\",\"ModalFooter\",\"Button\",\"color\",\"Task\",\"data\",\"handleEdit\",\"handleDelete\",\"className\",\"filter\",\"Boolean\",\"join\",\"onClick\",\"TabList\",\"isShowCompleted\",\"displayCompleted\",\"axios\",\"interceptors\",\"response\",\"use\",\"headers\",\"alert\",\"Promise\",\"reject\",\"Error\",\"App\",\"setIsShowCompleted\",\"taskList\",\"setTaskList\",\"activeTask\",\"setActiveTask\",\"refreshList\",\"get\",\"then\",\"res\",\"catch\",\"console\",\"error\",\"delete\",\"showedTasks\",\"createTask\",\"map\",\"task\",\"key\",\"put\",\"post\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useEffect, useState } from \\\"react\\\";\\nimport {\\n  Button,\\n  Modal,\\n  ModalHeader,\\n  ModalBody,\\n  ModalFooter,\\n  Form,\\n  FormGroup,\\n  Input,\\n  Label,\\n} from \\\"reactstrap\\\";\\n\\nconst TaskEditModal = ({ taskData, toggle, onSave }) => {\\n  const [item, setItem] = useState(taskData);\\n\\n  useEffect(() => {\\n    setItem(taskData);\\n  }, [taskData]);\\n\\n  const handleChange = (e) => {\\n    let { name, value } = e.target;\\n    if (e.target.type === \\\"checkbox\\\") {\\n      value = e.target.checked;\\n    }\\n    setItem({ ...item, [name]: value });\\n  };\\n\\n  return (\\n    <Modal isOpen={true} toggle={toggle}>\\n      <Form onSubmit={(e) => { onSave(item); e.preventDefault(); }}>\\n        <ModalHeader toggle={toggle}>Task Item</ModalHeader>\\n        <ModalBody>\\n          <FormGroup>\\n            <Label for=\\\"task-title\\\">Title</Label>\\n            <Input\\n              type=\\\"text\\\"\\n              id=\\\"task-title\\\"\\n              name=\\\"title\\\"\\n              value={item.title}\\n              onChange={handleChange}\\n              placeholder=\\\"Enter Task Title\\\"\\n              required\\n            />\\n          </FormGroup>\\n          <FormGroup>\\n            <Label for=\\\"task-description\\\">Description</Label>\\n            <Input\\n              type=\\\"text\\\"\\n              id=\\\"task-description\\\"\\n              name=\\\"description\\\"\\n              value={item.description}\\n              onChange={handleChange}\\n              placeholder=\\\"Enter Task description\\\"\\n              required\\n            />\\n          </FormGroup>\\n          <FormGroup check>\\n            <Label check>\\n              <Input\\n                type=\\\"checkbox\\\"\\n                name=\\\"completed\\\"\\n                checked={item.completed}\\n                onChange={handleChange}\\n              />\\n              Completed\\n            </Label>\\n          </FormGroup>\\n        </ModalBody>\\n        <ModalFooter>\\n          <Button type=\\\"submit\\\" color=\\\"success\\\">\\n            Save\\n          </Button>\\n        </ModalFooter>\\n      </Form>\\n    </Modal>\\n  );\\n};\\n\\nexport default TaskEditModal;\",\"const Task = ({ data, handleEdit, handleDelete }) => {\\n  return (\\n    <li className=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n      <div\\n        className={`task-title mr-2 ${data.completed ? \\\"completed-task\\\" : \\\"\\\"}`}\\n        title={[data.title, data.description].filter(Boolean).join(': ')}\\n      >\\n        {data.title}\\n      </div>\\n      <div className=\\\"task-buttons\\\">\\n        <button\\n          className=\\\"btn btn-secondary mr-2\\\"\\n          onClick={() => handleEdit(data)}\\n        >\\n          Edit\\n        </button>{' '}\\n        <button className=\\\"btn btn-danger\\\" onClick={() => handleDelete(data)}>\\n          Delete\\n        </button>\\n      </div>\\n    </li>\\n  );\\n};\\n\\nexport default Task;\\n\",\"const TabList = ({ isShowCompleted, displayCompleted }) => {\\n  return (\\n    <div className=\\\"nav nav-tabs\\\">\\n      <span\\n        onClick={() => displayCompleted(true)}\\n        className={isShowCompleted ? \\\"nav-link active\\\" : \\\"nav-link\\\"}\\n      >\\n        Complete\\n      </span>\\n      <span\\n        onClick={() => displayCompleted(false)}\\n        className={isShowCompleted ? \\\"nav-link\\\" : \\\"nav-link active\\\"}\\n      >\\n        Incomplete\\n      </span>\\n    </div>\\n  );\\n};\\n\\nexport default TabList;\\n\",\"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport TaskEditModal from \\\"./components/TaskEditModal\\\";\\nimport Task from \\\"./components/Task\\\";\\nimport TabList from \\\"./components/TabList\\\";\\n\\naxios.interceptors.response.use(function (response) {\\n  if (response.headers['content-type'] !== 'application/json') {\\n    alert('unsupport data format in server response')\\n    return Promise.reject(new Error('unsupport data format'));\\n  }\\n  return response;\\n});\\n\\nconst App = () => {\\n  const [isShowCompleted, setIsShowCompleted] = useState(false);\\n  const [taskList, setTaskList] = useState([]);\\n  const [activeTask, setActiveTask] = useState(null);\\n\\n  const refreshList = () => {\\n    axios\\n      .get(\\\"/api/tasks/\\\")\\n      .then((res) => setTaskList(res.data))\\n      .catch(console.error);\\n  };\\n\\n  useEffect(() => {\\n    refreshList();\\n  }, []);\\n\\n  const handleSubmit = (item) => {\\n    const request = item.id\\n      ? axios.put(`/api/tasks/${item.id}/`, item)\\n      : axios.post(\\\"/api/tasks/\\\", item);\\n\\n    request\\n      .then((res) => {\\n        refreshList();\\n        setActiveTask(null);\\n      })\\n      .catch(console.error);\\n  };\\n\\n  const handleDelete = (item) => {\\n    axios\\n      .delete(`/api/tasks/${item.id}/`)\\n      .then(refreshList)\\n      .catch(console.error);\\n  };\\n\\n  const createTask = () => {\\n    setActiveTask({ title: \\\"\\\", description: \\\"\\\", completed: false });\\n  };\\n\\n  const showedTasks = taskList.filter(\\n    (item) => item.completed === isShowCompleted\\n  );\\n\\n  return (\\n    <main className=\\\"container\\\">\\n      <h1 className=\\\"text text-uppercase text-center my-4\\\">Taski</h1>\\n      <div className=\\\"row\\\">\\n        <div className=\\\"col-md-6 col-sm-10 mx-auto p-0\\\">\\n          <div className=\\\"card p-3\\\">\\n            <div className=\\\"mb-4\\\">\\n              <button className=\\\"btn btn-primary\\\" onClick={createTask}>\\n                Add task\\n              </button>\\n            </div>\\n            <TabList\\n              displayCompleted={setIsShowCompleted}\\n              isShowCompleted={isShowCompleted}\\n            />\\n            <ul className=\\\"list-group list-group-flush border-top-0\\\">\\n              {showedTasks.map((task) => (\\n                <Task\\n                  key={task.id}\\n                  data={task}\\n                  handleEdit={setActiveTask}\\n                  handleDelete={handleDelete}\\n                />\\n              ))}\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      {activeTask && (\\n        <TaskEditModal\\n          taskData={activeTask}\\n          toggle={() => setActiveTask(null)}\\n          onSave={handleSubmit}\\n        />\\n      )}\\n    </main>\\n  );\\n};\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport 'bootstrap/dist/css/bootstrap.css';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,t,a){e.exports=a(32)},25:function(e,t,a){},32:function(e,t,a){\"use strict\";a.r(t);var n=a(1),l=a.n(n),c=a(13),r=a.n(c),s=(a(24),a(25),a(40)),o=a(5);var i=e=>{let{taskData:t,toggle:a,onSave:c}=e;const[r,s]=Object(n.useState)(t);Object(n.useEffect)(()=>{s(t)},[t]);const i=e=>{let{name:t,value:a}=e.target;\"checkbox\"===e.target.type&&(a=e.target.checked),s({...r,[t]:a})};return l.a.createElement(o.f,{isOpen:!0,toggle:a},l.a.createElement(o.b,{onSubmit:e=>{c(r),e.preventDefault()}},l.a.createElement(o.i,{toggle:a},\"Task Item\"),l.a.createElement(o.g,null,l.a.createElement(o.c,null,l.a.createElement(o.e,{for:\"task-title\"},\"Title\"),l.a.createElement(o.d,{type:\"text\",id:\"task-title\",name:\"title\",value:r.title,onChange:i,placeholder:\"Enter Task Title\",required:!0})),l.a.createElement(o.c,null,l.a.createElement(o.e,{for:\"task-description\"},\"Description\"),l.a.createElement(o.d,{type:\"text\",id:\"task-description\",name:\"description\",value:r.description,onChange:i,placeholder:\"Enter Task description\",required:!0})),l.a.createElement(o.c,{check:!0},l.a.createElement(o.e,{check:!0},l.a.createElement(o.d,{type:\"checkbox\",name:\"completed\",checked:r.completed,onChange:i}),\"Completed\"))),l.a.createElement(o.h,null,l.a.createElement(o.a,{type:\"submit\",color:\"success\"},\"Save\"))))};var m=e=>{let{data:t,handleEdit:a,handleDelete:n}=e;return React.createElement(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\"},React.createElement(\"div\",{className:`task-title mr-2 ${t.completed?\"completed-task\":\"\"}`,title:[t.title,t.description].filter(Boolean).join(\": \")},t.title),React.createElement(\"div\",{className:\"task-buttons\"},React.createElement(\"button\",{className:\"btn btn-secondary mr-2\",onClick:()=>a(t)},\"Edit\"),\" \",React.createElement(\"button\",{className:\"btn btn-danger\",onClick:()=>n(t)},\"Delete\")))};var d=e=>{let{isShowCompleted:t,displayCompleted:a}=e;return React.createElement(\"div\",{className:\"nav nav-tabs\"},React.createElement(\"span\",{onClick:()=>a(!0),className:t?\"nav-link active\":\"nav-link\"},\"Complete\"),React.createElement(\"span\",{onClick:()=>a(!1),className:t?\"nav-link\":\"nav-link active\"},\"Incomplete\"))};s.a.interceptors.response.use(function(e){return\"application/json\"!==e.headers[\"content-type\"]?(alert(\"unsupport data format in server response\"),Promise.reject(new Error(\"unsupport data format\"))):e});var p=()=>{const[e,t]=Object(n.useState)(!1),[a,c]=Object(n.useState)([]),[r,o]=Object(n.useState)(null),p=()=>{s.a.get(\"/api/tasks/\").then(e=>c(e.data)).catch(console.error)};Object(n.useEffect)(()=>{p()},[]);const u=e=>{s.a.delete(`/api/tasks/${e.id}/`).then(p).catch(console.error)},E=a.filter(t=>t.completed===e);return l.a.createElement(\"main\",{className:\"container\"},l.a.createElement(\"h1\",{className:\"text text-uppercase text-center my-4\"},\"Taski\"),l.a.createElement(\"div\",{className:\"row\"},l.a.createElement(\"div\",{className:\"col-md-6 col-sm-10 mx-auto p-0\"},l.a.createElement(\"div\",{className:\"card p-3\"},l.a.createElement(\"div\",{className:\"mb-4\"},l.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:()=>{o({title:\"\",description:\"\",completed:!1})}},\"Add task\")),l.a.createElement(d,{displayCompleted:t,isShowCompleted:e}),l.a.createElement(\"ul\",{className:\"list-group list-group-flush border-top-0\"},E.map(e=>l.a.createElement(m,{key:e.id,data:e,handleEdit:o,handleDelete:u})))))),r&&l.a.createElement(i,{taskData:r,toggle:()=>o(null),onSave:e=>{(e.id?s.a.put(`/api/tasks/${e.id}/`,e):s.a.post(\"/api/tasks/\",e)).then(e=>{p(),o(null)}).catch(console.error)}}))};var u=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,41)).then(t=>{let{getCLS:a,getFID:n,getFCP:l,getLCP:c,getTTFB:r}=t;a(e),n(e),l(e),c(e),r(e)})};r.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(p,null))),u()}},[[18,1,2]]]);","extractedComments":[]}